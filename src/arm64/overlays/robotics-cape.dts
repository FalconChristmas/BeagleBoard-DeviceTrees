// SPDX-License-Identifier: GPL-2.0
/*
 * Copyright (C) 2022 Jason Kridner, BeagleBoard.org Foundation
 */

/dts-v1/;
/plugin/;

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/interrupt-controller/arm-gic.h>
#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/pinctrl/k3.h>
#include <dt-bindings/board/k3-j721e-bone-pins.h>
#include <dt-bindings/soc/ti,sci_pm_domain.h>
#include <dt-bindings/input/linux-event-codes.h>

/*
 * Annotate in /proc/device-tree/chosen that this overlay is loaded
 */
&{/chosen} {
	overlays {
		BB-ROBOTICS-CAPE-00B0.kernel = __TIMESTAMP__;
	};
};

/*
 * Update the default pinmux of the pins.
 */
#define BONE_MUX(XX,YY) \
	&bone_##XX##_pinmux { pinctrl-0 = <&##XX##_##YY##_pin>; }

BONE_MUX(P8_03,gpio);		/* Motor1_SLP# */
BONE_MUX(P8_05,gpio);		/* Motor1_FAULT# */
BONE_MUX(P8_07,gpio);		/* Motor1_OC# */
BONE_MUX(P8_09,gpio);		/* Motor4_FAULT# */
BONE_MUX(P8_11,pruout);		/* Motor4_PWM */
BONE_MUX(P8_13,gpio);		/* LED4 */
BONE_MUX(P8_15,pruin);		/* Capture4 */
BONE_MUX(P8_17,gpio_pd);	/* Motor4_IN1 */
BONE_MUX(P8_19,gpio_pd);	/* Motor4_IN2 */
BONE_MUX(P8_21,gpio_pd);	/* CAP_OE#1 */
BONE_MUX(P8_23,gpio_pd);	/* CAP_OE#2 */
BONE_MUX(P8_25,pruin);		/* Ultrasonic1 */
BONE_MUX(P8_27,pruin);		/* Ultrasonic2 */
BONE_MUX(P8_29,uart);		/* Lidar_RX - UART8_TX */
BONE_MUX(P8_31,gpio);		/* Motor3_FAULT# */
BONE_MUX(P8_33,qep);		/* QEP2_B - EQEP1_B */
BONE_MUX(P8_35,qep);		/* QEP2_A - EQEP1_A */
BONE_MUX(P8_37,pruin);		/* Ultrasonic3 */
BONE_MUX(P8_39,pruin);		/* Ultrasonic4 */
BONE_MUX(P8_41,pruout);		/* Servo7 */
BONE_MUX(P8_43,pruout);		/* Servo8 */
BONE_MUX(P8_45,pruout);		/* Servo9 */

BONE_MUX(P8_04,pruout);		/* Motor1_PWM */
BONE_MUX(P8_06,gpio_pd);	/* Motor1_IN1 */
BONE_MUX(P8_08,gpio_pd);	/* Motor1_IN2 */
BONE_MUX(P8_10,gpio_pd);	/* Motor3_IN1 */
BONE_MUX(P8_12,pruout);		/* Motor3_PWM */
BONE_MUX(P8_14,pruout);		/* Servo2 */
BONE_MUX(P8_16,gpio_pd);	/* Motor3_IN */
BONE_MUX(P8_18,gpio);		/* LED3 */
BONE_MUX(P8_20,pruout);		/* Servo5 */
BONE_MUX(P8_22,uart);		/* BCF_SERIAL_TX - UART2_RX */
BONE_MUX(P8_24,pruout);		/* Lidar_PWM */
BONE_MUX(P8_26,pruout);		/* Servo6 */
BONE_MUX(P8_28,uart);		/* Lidar_TX - UART8_RX */
BONE_MUX(P8_30,gpio);		/* Lidar_OE */
BONE_MUX(P8_32,gpio);		/* BCF_RST */
BONE_MUX(P8_34,uart);		/* BCF_SERIAL_RX - UART2_TX */
BONE_MUX(P8_36,gpio);		/* 6DOF_INT */
BONE_MUX(P8_38,gpio_pd);	/* Motor2_IN1 */
BONE_MUX(P8_40,gpio_pd);	/* Motor2_IN2 */
BONE_MUX(P8_42,gpio);		/* Motor234_nSLEEP */
BONE_MUX(P8_44,gpio);		/* Magnetometer_INT */

BONE_MUX(P9_11,gpio);		/* Motor2_FAULT# */
BONE_MUX(P9_13,pruout);		/* Motor2_PWM */
BONE_MUX(P9_15,pruout);		/* Servo10 */
BONE_MUX(P9_17,spi);		/* Barometer_CS# - SPI6_CS0 */
BONE_MUX(P9_19,pruout);		/* Servo1 */
BONE_MUX(P9_21,spi);		/* SPI6_D0 - SDO */
BONE_MUX(P9_23,spi);		/* IMU_CS# - SPI6_CS1 */
BONE_MUX(P9_25,gpio);		/* Magnetometer_CS# */
BONE_MUX(P9_27,qep);		/* QEP1_B - EQEP0_B */
BONE_MUX(P9_29,pruin);		/* Capture3 */
BONE_MUX(P9_31,gpio);		/* USER_BUTTON1 - PAUSE */
BONE_MUX(P9_33,default);	/* Motor2_Current - AIN4 */
BONE_MUX(P9_35,default);	/* Motor3_Current - AIN6 */
BONE_MUX(P9_37,uart);		/* GPS_TXD */
BONE_MUX(P9_39,default);	/* Battery_Voltage - AIN0 */
BONE_MUX(P9_41,gpio);		/* USER_BUTTON2 - MODE */

BONE_MUX(P9_12,pruout);		/* Servo4 */
BONE_MUX(P9_14,gpio);		/* LED1 */
BONE_MUX(P9_16,gpio);		/* LED2 */
BONE_MUX(P9_18,spi);		/* SPI6_D1 - SDI */
BONE_MUX(P9_20,pruout);		/* Servo3 */
BONE_MUX(P9_22,spi);		/* SPI6_CLK */
BONE_MUX(P9_24,i2c);		/* EEPROM_I2C_SCL */
BONE_MUX(P9_26,i2c);		/* EEPROM_I2C_SDA */
BONE_MUX(P9_28,pruin);		/* Capture1 */
BONE_MUX(P9_30,pruin);		/* Capture2 */
BONE_MUX(P9_36,default);	/* Motor4_Current - AIN5 */
BONE_MUX(P9_38,uart);		/* GPS_RXD */
BONE_MUX(P9_40,default);	/* Motor1_Current - AIN1 */
BONE_MUX(P9_42,qep);		/* QEP1_A - EQEP0_A */

/*
 * Enable desired drivers
 */
&bone_key_P9_31 {
	status = "okay";
	label = "PAUSE";
	linux,code = <KEY_PAUSE>;
	gpios = <gpio_P9_31 GPIO_ACTIVE_LOW>;
};

&bone_key_P9_41 {
	status = "okay";
	label = "MODE";
	linux,code = <KEY_MODE>;
	gpios = <gpio_P9_41 GPIO_ACTIVE_LOW>;
};

&bone_led_P9_14 {
	status = "okay";
	label = "green";
	linux,default-trigger = "default-off";
};

&bone_led_P9_16 {
	status = "okay";
	label = "red";
	linux,default-trigger = "default-off";
};

&bone_led_P8_18 {
	status = "okay";
	label = "bat25";
	linux,default-trigger = "default-off";
};

&bone_led_P8_13 {
	status = "okay";
	label = "bat75";
	linux,default-trigger = "default-off";
};

&bone_led_P8_21 {
	status = "okay";
	label = "capture_oe1";
	linux,default-trigger = "default-off";
	gpios = <gpio_P8_21 GPIO_ACTIVE_LOW>;
};

&bone_led_P8_23 {
	status = "okay";
	label = "capture_oe2";
	linux,default-trigger = "default-on";
	gpios = <gpio_P8_23 GPIO_ACTIVE_LOW>;
};

&bone_spi_0 {
	ti,spi-num-cs = <3>;
	ti,pindir-d0-out-d1-in;
	cs-gpios = <0>, /* P9_17 */
		   <0>, /* P9_23 */
		   <gpio_P9_25 GPIO_ACTIVE_LOW>;

	#address-cells = <1>;
	#size-cells = <0>;

	pressure@0 {
		compatible = "bosch,bmp280";
		reg = <0>;	/* CE0 */
		spi-max-frequency = <5000000>;
	};

	imu@1 {
		compatible = "st,lsm6ds3tr-c";
		#address-cells = <1>;
		#size-cells = <0>;
		reg = <1>;	/* CE1 */
		spi-max-frequency = <5000000>;
	};

	magn@2 {
		compatible = "bosch,bmm150_magn";
		#address-cells = <1>;
		#size-cells = <0>;
		reg = <2>;	/* CE2 */
		spi-max-frequency = <5000000>;
	};
};

&cbass_main {
	#address-cells = <2>;
	#size-cells = <2>;

	/* TODO: the base for this should be in the board DT */
	eqep0: qep@3200000 {
		compatible = "ti,am3352-eqep";
		reg = <0 0x3200000 0 0x100>;
		power-domains = <&k3_pds 94 TI_SCI_PD_EXCLUSIVE>;
		clocks = <&k3_clks 94 0>;
		clock-names = "eqep0-ficlk";
		interrupt-parent = <&gic500>;
		interrupts = <GIC_SPI 322 IRQ_TYPE_EDGE_RISING>;
		interrupt-names = "eqep0";
		symlink = "bone/qep/0"; /* A - P9_42, B - P9_27 */

		count_mode = <0>;
		swap_input = <0>;
		invert_qa = <1>;
		invert_qb = <1>;
		invert_qi = <0>;
		invert_qs = <0>;
	};

	eqep1: qep@3210000 {
		compatible = "ti,am3352-eqep";
		reg = <0 0x3210000 0 0x100>;
		power-domains = <&k3_pds 95 TI_SCI_PD_EXCLUSIVE>;
		clocks = <&k3_clks 95 0>;
		clock-names = "eqep1-ficlk";
		interrupt-parent = <&gic500>;
		interrupts = <GIC_SPI 323 IRQ_TYPE_EDGE_RISING>;
		interrupt-names = "eqep1";
		symlink = "bone/qep/1"; /* A - P8_35, B - P8_33 */

		count_mode = <0>;
		swap_input = <0>;
		invert_qa = <1>;
		invert_qb = <1>;
		invert_qi = <0>;
		invert_qs = <0>;
	};

	eqep2: qep@3220000 {
		status = "disabled";
		compatible = "ti,am3352-eqep";
		reg = <0 0x3220000 0 0x100>;
		power-domains = <&k3_pds 96 TI_SCI_PD_EXCLUSIVE>;
		clocks = <&k3_clks 96 0>;
		clock-names = "eqep2-ficlk";
		interrupt-parent = <&gic500>;
		interrupts = <GIC_SPI 324 IRQ_TYPE_EDGE_RISING>;
		interrupt-names = "eqep2";

		count_mode = <0>;
		swap_input = <0>;
		invert_qa = <1>;
		invert_qb = <1>;
		invert_qi = <0>;
		invert_qs = <0>;
	};
};

/* TODO: this is not the standard bone/uart/1 pinout location */
&bone_uart_1 {
	status = "okay";

	bcfserial {
		compatible = "beagle,bcfserial";
	};
};

